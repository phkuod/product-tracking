{
  "info": {
    "name": "Product Process Tracking API",
    "description": "Comprehensive API collection for the Product Process Tracking System",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "refresh_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "product_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "route_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "station_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health & Info",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        },
        {
          "name": "API Info",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/info",
              "host": ["{{base_url}}"],
              "path": ["api", "info"]
            }
          },
          "response": []
        },
        {
          "name": "Test Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/test",
              "host": ["{{base_url}}"],
              "path": ["api", "test"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "    pm.test('Login successful', function () {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.token).to.exist;",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"admin\",\n  \"password\": \"admin123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('jwt_token', response.data.token);",
                  "    pm.collectionVariables.set('refresh_token', response.data.refreshToken);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{refresh_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "refresh"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Get Products with Filters",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products?search=Widget&status=normal&page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["api", "products"],
              "query": [
                {
                  "key": "search",
                  "value": "Widget"
                },
                {
                  "key": "status",
                  "value": "normal"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Product",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('product_id', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Widget\",\n  \"model\": \"TW-001\",\n  \"route_id\": \"b8c9d0e1-f2a3-4b5c-6d7e-8f9a0b1c2d3e\",\n  \"priority\": \"medium\",\n  \"notes\": \"Created via Postman\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Widget\",\n  \"priority\": \"high\",\n  \"progress\": 75,\n  \"status\": \"normal\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Advance Product",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"notes\": \"Completed assembly step\",\n  \"field_data\": {\n    \"quality_check\": true,\n    \"batch_number\": \"B-2024-001\",\n    \"inspector\": \"John Doe\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}/advance",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}", "advance"]
            }
          },
          "response": []
        },
        {
          "name": "Bulk Update",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"product_ids\": [\"{{product_id}}\"],\n  \"updates\": {\n    \"priority\": \"high\",\n    \"status\": \"normal\"\n  }\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products/bulk",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "bulk"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products/{{product_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "products", "{{product_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Routes",
      "item": [
        {
          "name": "Get All Routes",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/routes",
              "host": ["{{base_url}}"],
              "path": ["api", "routes"]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Route",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/routes/{{route_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "routes", "{{route_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Route",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('route_id', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Manufacturing Route\",\n  \"description\": \"Test route created via Postman\",\n  \"station_ids\": [\n    \"a1b2c3d4-e5f6-7890-abcd-ef1234567890\",\n    \"b2c3d4e5-f6a7-8901-bcde-f23456789012\"\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/routes",
              "host": ["{{base_url}}"],
              "path": ["api", "routes"]
            }
          },
          "response": []
        },
        {
          "name": "Update Route",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Route\",\n  \"description\": \"Updated description\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/routes/{{route_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "routes", "{{route_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Route",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/routes/{{route_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "routes", "{{route_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Stations",
      "item": [
        {
          "name": "Get All Stations",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/stations",
              "host": ["{{base_url}}"],
              "path": ["api", "stations"]
            }
          },
          "response": []
        },
        {
          "name": "Get Single Station",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/stations/{{station_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "stations", "{{station_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Station",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('station_id', response.data.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Station\",\n  \"owner\": \"John Doe\",\n  \"completion_rule\": \"all_filled\",\n  \"estimated_duration\": 30,\n  \"fields\": [\n    {\n      \"name\": \"Quality Check\",\n      \"type\": \"checkbox\",\n      \"is_required\": true\n    },\n    {\n      \"name\": \"Inspector Notes\",\n      \"type\": \"textarea\",\n      \"is_required\": false\n    },\n    {\n      \"name\": \"Batch Number\",\n      \"type\": \"text\",\n      \"is_required\": true\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/stations",
              "host": ["{{base_url}}"],
              "path": ["api", "stations"]
            }
          },
          "response": []
        },
        {
          "name": "Update Station",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test Station\",\n  \"owner\": \"Jane Smith\",\n  \"estimated_duration\": 45,\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/stations/{{station_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "stations", "{{station_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Station",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/stations/{{station_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "stations", "{{station_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Dashboard Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/analytics",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics"]
            }
          },
          "response": []
        },
        {
          "name": "Analytics with Date Range",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/analytics?start=2024-01-01&end=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics"],
              "query": [
                {
                  "key": "start",
                  "value": "2024-01-01"
                },
                {
                  "key": "end",
                  "value": "2024-12-31"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Station Utilization",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/analytics/stations",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics", "stations"]
            }
          },
          "response": []
        },
        {
          "name": "Owner Performance",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/analytics/owners",
              "host": ["{{base_url}}"],
              "path": ["api", "analytics", "owners"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Management",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"name\": \"Test User\",\n  \"role\": \"operator\",\n  \"department\": \"Assembly\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users",
              "host": ["{{base_url}}"],
              "path": ["api", "users"]
            }
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\",\n  \"department\": \"Quality Control\",\n  \"is_active\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "users", "{{user_id}}"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "404 - Non-existent Endpoint",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/nonexistent",
              "host": ["{{base_url}}"],
              "path": ["api", "nonexistent"]
            }
          },
          "response": []
        },
        {
          "name": "Unauthorized Request",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Invalid Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer invalid-token-here"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "response": []
        },
        {
          "name": "Validation Error",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"model\": \"invalid-model\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/products",
              "host": ["{{base_url}}"],
              "path": ["api", "products"]
            }
          },
          "response": []
        }
      ]
    }
  ]
}